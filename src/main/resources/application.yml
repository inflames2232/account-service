spring:
  profiles:
    active: development
  application:
    name: account_service
  kafka:
    producer:
      bootstrap-servers:
        - localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value-serializer: org.apache.kafka.connect.json.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers:
        - localhost:29092
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: 'com.accenture.accountservice.dto.response'
  cloud:
    consul:
      discovery:
        instance-id: ${spring.application.name}:${random.value}
---
spring:
  profiles: development
  jpa:
    show-sql: false
    database: POSTGRESQL

    generate-ddl: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.jdbc.lob.non_contextual_creation: true
  datasource:
    url: jdbc:postgresql://localhost:5432/accountdb
    username: west223
    password: westwest223
  liquibase:
    url: jdbc:postgresql://localhost:5432/accountdb
    user: west223
    password: westwest223
    enabled: true

app:
  topic:
    accounts: accounts

kafka:
  groupConsumer:
    topic: accounts
#---
#spring:
#  profiles: test
#  jpa:
#    show-sql:
#    database: H2
#  datasource:
#    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE